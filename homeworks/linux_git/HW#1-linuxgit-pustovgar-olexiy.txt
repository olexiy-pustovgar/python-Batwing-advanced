 ___ Linux ___

1 mkdir linux_lecture && touch notes.txt
2 cp notes.txt linux_lecture
3 ls -l
4 ls -arl
5 mv notes.txt new_notes.txt
6 rm linux_lecture/notes.txt new_notes.txt
7 touch -md '2020-01-01 4:15' linux_lecture/homework.sh
8 find linux_lecture/*.txt
9 mkdir lecture_new && cp linux_lecture/*.txt lecture_new
10 echo "echo 'linux_lecture'" > linux_lecture/homework.sh
11 cat linux_lecture/homework.sh
12 chmod 200 linux_lecture/homework.sh && cat linux_lecture/homework.sh
13 chmod 700 linux_lecture/homework.sh && cat linux_lecture/homework.sh
13 linux_lecture/./homework.sh
14 nano linux_lecture/homework.sh
15 head -n 7 linux_lecture/homework.sh
16 echo "ls" > linux_lecture/notes.sh && chmod u+x linux_lecture/notes.sh
17 linux_lecture/./notes.sh

___ Git ___

1 mkdir cursor_git
2 cd cursor_git
3 touch first.py
4 git add .
5 git commit -m "adding first.py"
6 git log
7 touch second.py
8 git add .
9 git commit -m "adding second.py"
10 rm first.py
11 git add .
12 git commit -m "removing first.py"
13 git log
14 git push origin master
15 git branch first
16 git checkout -b second master
17 echo "print('hello')" > second.py
18 git stash && git checkout first
19 git checkout second && git stash pop
20 git add .
21 git commit -m "Changing second.py" 
22 git push origin second
23 git checkout first
24 echo "print('Cursor')" > second.py
25 git add .
26 git commit -m "Changing second.py"
27 git push origin first
28 git checkout master
29 git merge second
30 git merge first
31 nano second.py
   git add second.py
   git commit -m "Resolved conflicts"
   git push origin master
